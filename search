#!/usr/bin/env python3

import argparse
import subprocess
import os
import json

print("Searching...")

parser = argparse.ArgumentParser()
parser.add_argument("--json", type=json.loads, required=True, help="json arguments")
args, _ = parser.parse_known_args()

if not os.path.isdir("/output"):
    os.mkdir("/output", 777)

#define default arguments
fields = ','.join(['TEXT', 'H3', 'DOCTITLE', 'HEADLINE', 'TTL'])

#run standard model 
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.BM25.topics.robust04.301-450.601-700.txt
    -w BM25
    -t /input/topics/{1} 
    -DTrecDocTags.process=TEXT,H3,DOCTITLE,HEADLINE,TTL
    -Dtrec.output.format.length={2}
    """.format(args.json['collection'], args.json['topic'], args.json['top_k'])
    .split())

#Run PL2 
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.pl2.topics.robust04.301-450.601-700.txt
    -w PL2 
    -t /input/topics/{1}
    -DTrecDocTags.process=TEXT,H3,DOCTITLE,HEADLINE,TTL
    -Dtrec.output.format.length={2}
    """.format(args.json['collection'], args.json['topic'], args.json['top_k'])
    .split())

#Run BM25+QE
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.bm25+qe.topics.robust04.301-450.601-700.txt
    -w BM25
    -q 
    -t /input/topics/{1}
    -DTrecDocTags.process=TEXT,H3,DOCTITLE,HEADLINE,TTL 
    -Dtrec.output.format.length={2}
    """.format(args.json['collection'], args.json['topic'], args.json['top_k'])
    .split())
