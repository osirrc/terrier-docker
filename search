#!/usr/bin/env python3

import argparse
import subprocess

print("Searching...")

parser = argparse.ArgumentParser()

parser.add_argument("--collection", required=True, type=str, help="Name of the collection")
parser.add_argument("--topic_format", default="TREC", type=str, help="Format of the topic file")
parser.add_argument("--topic", required=True, type=str, help="Name of the topic file")
parser.add_argument("--fields", nargs="+", type="str", default=["TEXT", "H3", "DOCTITLE", "HEADLINE", "TTL"], help="Fields to be ued when searching")
parser.add_argument("--method", default="BM25", type="str" help="Matching method to be used when searching")
parser.add_argument("--top_k", required=True, type="str", help="Number of results returned per topic")
args, _ = parser.parse_known_args()

fields = ",".join(args.fields)

#run standard model 
subprocess.run("""
    /work/{0}/terrier-project-5.1/bin/terrier batchretrieve -w {1} 
    -DTrecDocTags.process={2} -t {3} 
    -o /output/run.{4}.{1}.topics.robust04.301-450.601-700.txt
    """.format(args.collection, args.method, fields, args.topic).split()

#Run PL2 
subprocess.run("""
    /work/{0}/terrier-project-5.1/bin/terrier batchretrieve -w PL2 
    -DTrecDocTags.process={1} -t {2} 
    -o /output/run.{3}.pl2.topics.robust04.301-450.601-700.txt
    """.format(args.collection, fields, args.topic, args.collection).split())

#Run BM25+QE
subprocess.run("""
    /work/{0}/terrier-project-5.1/bin/terrier batchretrieve -w BM25 
    -q -DTrecDocTags.process={1} -t {2} -DTrec
    -o /output/run.{3}.bm25+qe.topics.robust04.301-450.601-700.txt
    """.format(args.collection, fields, args.topic, args.collection).split())
