#!/usr/bin/env python3

import argparse
import subprocess
import os
print("Searching...")

parser = argparse.ArgumentParser()

parser.add_argument("--collection", required=True, type=str, help="Name of the collection")
parser.add_argument("--topic_format", default="TREC", type=str, help="Format of the topic file")
parser.add_argument("--topic", required=True, type=str, help="Name of the topic file")
parser.add_argument("--fields", nargs="+", type=str, default='TEXT, H3, DOCTITLE, HEADLINE, TTL', help="Fields to be ued when searching")
parser.add_argument("--method", default="BM25", type=str, help="Matching method to be used when searching")
parser.add_argument("--top_k", required=True, type=str, help="Number of results returned per topic")
args, _ = parser.parse_known_args()

if not os.path.isdir("/output"):
    os.mkdir("/output", 777)

fields = ",".join(args.fields)

#run standard model 
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.{1}.topics.robust04.301-450.601-700.txt
    -w {1}
    -t {2} 
    -DTrecDocTags.process={3} 
    -Dtrec.output.format.length={4}
    """.format(args.collection, args.method, args.topic, fields, args.top_k).split())

#Run PL2 
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.pl2.topics.robust04.301-450.601-700.txt
    -w PL2 
    -t {1}
    -DTrecDocTags.process={2}
    -Dtrec.output.format.length={3}
    """.format(args.collection, args.topic, fields, args.top_k).split())

#Run BM25+QE
subprocess.run("""
    /work/terrier-project-5.1/bin/terrier batchretrieve 
    -I /work/indexes/{0}
    -o /output/run.{0}.bm25+qe.topics.robust04.301-450.601-700.txt
    -w BM25
    -q 
    -t {1}
    -DTrecDocTags.process={2} 
    -Dtrec.output.format.length={3}
    """.format(args.collection, args.topic, fields, args.top_k).split())
